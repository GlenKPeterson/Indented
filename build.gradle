// Deploying to OSSRH with Gradle
// https://central.sonatype.org/pages/gradle.html

// To upload to sonatype (have to deploy manually)
// ./gradlew clean uploadArchives

// I think if you can see it here, then it's ready to be "Closed" and deployed manually:
// https://oss.sonatype.org/content/groups/staging/org/organicdesign/indented/Indented/
// Or maybe here once released:
// http://repo.maven.apache.org/maven2/org/organicdesign/indented/Indented/

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.21'
    id 'maven'
    id 'maven-publish'
    id 'signing'
    id 'org.jetbrains.dokka' version '0.9.18'
}

repositories {
    mavenLocal()
    maven {
        url = 'http://repo.maven.apache.org/maven2'
    }
}

dependencies {
    compile 'org.jetbrains.kotlin:kotlin-stdlib:1.3.21'
    testCompile 'org.jetbrains.kotlin:kotlin-test-junit:1.3.21'
    testCompile 'junit:junit:4.12'
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from(sourceSets.main.allSource)
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from(javadoc.destinationDir)
}

group = 'org.organicdesign.indented'
archivesBaseName = 'Indented'
version = '0.0.7'
description = 'Indented'
sourceCompatibility = '1.8'

artifacts {
    archives javadocJar, sourcesJar
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
            artifact(sourcesJar)
        }
    }
}

dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/javadoc"
}

signing {
    useGpgCmd()
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'Indented'
                packaging 'jar'
                // optionally artifactId can be defined here
                description 'Utilities for testing common Java contracts like equals(), hashCode(), and compareTo()'
                url 'https://github.com/GlenKPeterson/Indented'

                scm {
                    connection 'scm:git:https://github.com/GlenKPeterson/Indented.git'
                    developerConnection 'scm:git:https://github.com/GlenKPeterson/Indented.git'
                    url 'https://github.com/GlenKPeterson/Indented.git'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        name 'Glen K. Peterson'
                        email 'glen@organicdesign.org'
                        organization 'PlanBase Inc.'
                    }
                }
            }
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
